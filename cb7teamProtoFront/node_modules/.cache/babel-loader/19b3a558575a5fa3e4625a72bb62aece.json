{"ast":null,"code":"import _classCallCheck from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Web\\\\Kliks\\\\cb7teamprotofront\\\\src\\\\components\\\\AdminUserListPage.jsx\";\nimport React from 'react';\nimport { GlobalContext } from './GlobalContext';\nimport PaginationFooter from './PaginationFooter';\nimport UserRow from \"./UserRow\";\n\nvar AdminUserListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminUserListPage, _React$Component);\n\n  function AdminUserListPage(props) {\n    var _this;\n\n    _classCallCheck(this, AdminUserListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminUserListPage).call(this, props));\n\n    _this.handleDeletion = function (id) {\n      console.log(\"clicked\");\n      var url = 'http://localhost:8080/users/delete/' + id;\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          \"X-KLICKS-AUTH\": _this.context.token,\n          'Accept': 'application/json'\n        }\n      }).then(function (response) {\n        if (response.status === 200) {\n          alert(\"Successfull deletion\");\n\n          _this.fetchPageResults();\n        }\n      }).catch(function (error) {\n        return console.error('Error:', error);\n      });\n    };\n\n    _this.state = {\n      users: [],\n      searchResults: [],\n      currentPage: 0,\n      resultsPerPage: 5,\n      numberOfTotalPages: 0,\n      numberOfTotalResults: 0,\n      noResults: false\n    };\n    _this.setActivePage = _this.setActivePage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setResultsPerPage = _this.setResultsPerPage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchPageResults = _this.fetchPageResults.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeletion = _this.handleDeletion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AdminUserListPage, [{\n    key: \"setActivePage\",\n    value: function setActivePage(newActivePage) {\n      var _this2 = this;\n\n      this.setState({\n        currentPage: newActivePage - 1\n      }, function () {\n        return _this2.fetchPageResults();\n      });\n    }\n  }, {\n    key: \"setResultsPerPage\",\n    value: function setResultsPerPage(option) {\n      var _this3 = this;\n\n      this.setState({\n        currentPage: 0,\n        resultsPerPage: option\n      }, function () {\n        return _this3.fetchPageResults();\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('Messages component did mount');\n      this.fetchPageResults();\n    }\n  }, {\n    key: \"fetchPageResults\",\n    value: function fetchPageResults() {\n      var _this4 = this;\n\n      var url = 'http://localhost:8080/users/all?page=' + this.state.currentPage + '&size=' + this.state.resultsPerPage;\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'X-KLICKS-AUTH': this.context.token,\n          'Accept': 'application/json'\n        }\n      }).then(function (response) {\n        if (response.status === 200) {\n          response.json().then(function (data) {\n            var lastPageResults = data.count % _this4.state.resultsPerPage;\n            var pagesNumber = lastPageResults > 0 ? (data.count - lastPageResults) / _this4.state.resultsPerPage + 1 : data.count / _this4.state.resultsPerPage;\n\n            _this4.setState({\n              numberOfTotalPages: pagesNumber,\n              numberOfTotalResults: data.count,\n              users: data.results,\n              noResults: data.count === 0 ? true : false\n            });\n          });\n        } else {\n          _this4.setState({\n            currentPage: 0,\n            users: [],\n            numberOfTotalPages: 0,\n            numberOfTotalResults: 0,\n            noResults: true\n          });\n        }\n      }).catch(function (error) {\n        return console.error('Error:', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"AdminUserListPage\")), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.numberOfTotalResults, \" results\"), React.createElement(\"table\", {\n        className: \"table table-striped custab\",\n        style: {\n          width: \"80%\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Index\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" Username\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" FirstName \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" LastName \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \" Email \"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.users.length == 0 ? React.createElement(\"img\", {\n        src: \"http://photodentro.edu.gr/v/images/loading.gif\",\n        alt: \"Loading\",\n        width: \"80px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }) : null, this.state.users.map(function (user, index) {\n        return React.createElement(UserRow, {\n          key: user.id,\n          user: user,\n          i: _this5.state.currentPage * _this5.state.resultsPerPage + (index + 1),\n          handleDeletion: _this5.handleDeletion,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      }))), React.createElement(PaginationFooter, {\n        activePage: this.state.currentPage + 1,\n        totalPages: this.state.numberOfTotalPages,\n        handle: this.setActivePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AdminUserListPage;\n}(React.Component);\n\nAdminUserListPage.contextType = GlobalContext;\nexport default AdminUserListPage;","map":{"version":3,"sources":["D:\\Web\\Kliks\\cb7teamprotofront\\src\\components\\AdminUserListPage.jsx"],"names":["React","GlobalContext","PaginationFooter","UserRow","AdminUserListPage","props","handleDeletion","id","console","log","url","fetch","method","headers","context","token","then","response","status","alert","fetchPageResults","catch","error","state","users","searchResults","currentPage","resultsPerPage","numberOfTotalPages","numberOfTotalResults","noResults","setActivePage","bind","setResultsPerPage","newActivePage","setState","option","json","data","lastPageResults","count","pagesNumber","results","width","margin","length","map","user","index","Component","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { GlobalContext } from './GlobalContext';\r\nimport PaginationFooter from './PaginationFooter';\r\nimport UserRow from \"./UserRow\";\r\n\r\nclass AdminUserListPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            searchResults: [],\r\n            currentPage: 0,\r\n            resultsPerPage: 5,\r\n            numberOfTotalPages: 0,\r\n            numberOfTotalResults: 0,\r\n            noResults: false\r\n        };\r\n        this.setActivePage = this.setActivePage.bind(this);\r\n        this.setResultsPerPage = this.setResultsPerPage.bind(this);\r\n        this.fetchPageResults = this.fetchPageResults.bind(this);\r\n        this.handleDeletion = this.handleDeletion.bind(this);\r\n    }\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    setActivePage(newActivePage) {\r\n        this.setState({\r\n            currentPage: newActivePage - 1,\r\n        }, () => this.fetchPageResults());\r\n    }\r\n\r\n    setResultsPerPage(option) {\r\n        this.setState({\r\n            currentPage: 0,\r\n            resultsPerPage: option\r\n        }, () => this.fetchPageResults());\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Messages component did mount');\r\n        this.fetchPageResults();\r\n    }\r\n\r\n    fetchPageResults() {\r\n        const url = 'http://localhost:8080/users/all?page=' + this.state.currentPage + '&size=' + this.state.resultsPerPage;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-KLICKS-AUTH': this.context.token,\r\n                'Accept': 'application/json',\r\n            }\r\n        }).then((response) => {\r\n            if (response.status === 200) {\r\n                response.json().then(data => {\r\n                    const lastPageResults = data.count % this.state.resultsPerPage;\r\n                    const pagesNumber = (lastPageResults > 0) ? (((data.count - lastPageResults) / this.state.resultsPerPage) + 1) : (data.count / this.state.resultsPerPage);\r\n                    this.setState({\r\n                        numberOfTotalPages: pagesNumber,\r\n                        numberOfTotalResults: data.count,\r\n                        users: data.results,\r\n                        noResults: data.count === 0 ? true : false\r\n                    });\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    currentPage: 0,\r\n                    users: [],\r\n                    numberOfTotalPages: 0,\r\n                    numberOfTotalResults: 0,\r\n                    noResults: true,\r\n                });\r\n            }\r\n        }).catch(error => console.error('Error:', error));\r\n    }\r\n\r\n    handleDeletion = (id) =>{\r\n        console.log(\"clicked\");\r\n        const url = 'http://localhost:8080/users/delete/'+id\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"X-KLICKS-AUTH\": this.context.token,\r\n                'Accept': 'application/json'\r\n            },\r\n        }).then(response => {\r\n            if (response.status === 200) {\r\n                    alert(\"Successfull deletion\")\r\n                    this.fetchPageResults();\r\n            }\r\n        }).catch(error => console.error('Error:', error));\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div><h2>AdminUserListPage</h2></div>\r\n                <small>{this.state.numberOfTotalResults} results</small>\r\n                <table className=\"table table-striped custab\" style={{ width: \"80%\", margin: \"auto\" }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Index</th>\r\n                            <th> Username</th>\r\n                            <th> FirstName </th>\r\n                            <th> LastName </th>\r\n                            <th> Email </th>\r\n                            <th> Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.users.length == 0 ? (<img src=\"http://photodentro.edu.gr/v/images/loading.gif\" alt=\"Loading\" width=\"80px\" />) : null}\r\n                        {this.state.users.map((user, index) => {\r\n                            return (\r\n                                <UserRow key={user.id} user={user} i={((this.state.currentPage) * this.state.resultsPerPage)+ (index + 1)} handleDeletion = {this.handleDeletion} />);\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <PaginationFooter activePage={this.state.currentPage + 1} totalPages={this.state.numberOfTotalPages} handle={this.setActivePage} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminUserListPage;"]},"metadata":{},"sourceType":"module"}