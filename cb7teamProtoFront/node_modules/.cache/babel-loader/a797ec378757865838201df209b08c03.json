{"ast":null,"code":"import _classCallCheck from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Web\\\\Kliks\\\\cb7teamprotofront\\\\src\\\\components\\\\RegisterModal.js\";\nimport React, { Component } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { InputGroup } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from \"axios\";\nimport { Overlay } from 'react-bootstrap';\nimport { Tooltip } from 'react-bootstrap';\nimport { GlobalContext } from './GlobalContext';\n\nvar RegisterModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterModal, _Component);\n\n  function RegisterModal(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegisterModal).call(this, props));\n    console.log(props);\n    _this.usernameInput = React.createRef();\n    _this.passwordInput = React.createRef();\n    _this.passwordConfirmInput = React.createRef();\n    _this.firstNameInput = React.createRef();\n    _this.lastNameInput = React.createRef();\n    _this.emailInput = React.createRef();\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseRegisterModal = _this.handleCloseRegisterModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    /* for pass don't match tooltip */\n\n    _this.attachRef = function (target) {\n      return _this.setState({\n        target: target\n      });\n    };\n\n    _this.state = {\n      showPasswordsDontMatch: false\n    };\n    return _this;\n  }\n\n  _createClass(RegisterModal, [{\n    key: \"handleCloseRegisterModal\",\n    value: function handleCloseRegisterModal() {\n      this.context.setShowRegisterModal(false);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      /* for pass don't match tooltip */\n      if (this.passwordInput.current.value !== this.passwordConfirmInput.current.value) {\n        this.setState({\n          showPasswordsDontMatch: true\n        });\n      } else {\n        this.setState({\n          showPasswordsDontMatch: false\n        });\n        this.handleCloseRegisterModal();\n        console.log('ref to username: ', this.usernameInput.current.value);\n        console.log('ref to password: ', this.passwordInput.current.value);\n        console.log('ref to password: ', this.passwordConfirmInput.current.value);\n        console.log('ref to firstName: ', this.firstNameInput.current.value);\n        console.log('ref to lastName: ', this.lastNameInput.current.value);\n        console.log('ref to email: ', this.emailInput.current.value); // axios.post('testUrlHere',\n\n        axios.post('http://localhost:8080/register/user', {\n          \"username\": this.usernameInput.current.value,\n          \"password\": this.passwordInput.current.value,\n          \"firstName\": this.firstNameInput.current.value,\n          \"lastName\": this.lastNameInput.current.value,\n          \"photoLink\": this.lastNameInput.current.value,\n          \"role\": {\n            id: 1\n          },\n          \"email\": this.emailInput.current.value\n        }, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        }).then(function (response) {\n          alert(\"Registered sucessfully, you can now login\");\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          showPasswordsDontMatch = _this$state.showPasswordsDontMatch,\n          target = _this$state.target;\n      return React.createElement(React.Fragment, null, React.createElement(Modal, {\n        show: this.context.showRegisterModal,\n        onHide: this.handleCloseRegisterModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Register\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"validationCustomUsername\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        ref: this.usernameInput,\n        type: \"text\",\n        placeholder: \"username\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Please choose a username.\"))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"validationCustomPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        ref: this.passwordInput,\n        type: \"password\",\n        placeholder: \"password\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Please choose a password.\"))), React.createElement(Form.Group, {\n        ref: this.attachRef,\n        as: Row,\n        controlId: \"validationCustomPasswordConfirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        ref: this.passwordConfirmInput,\n        type: \"password\",\n        placeholder: \"confrirm password\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Please confirm your password.\"))), React.createElement(Overlay, {\n        id: \"passwordsDontMatchOverlay\",\n        target: target,\n        show: showPasswordsDontMatch,\n        placement: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Tooltip, Object.assign({\n          id: \"passwords-dont-match\"\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }), \"Passwords don't match\");\n      }), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"validationCustomFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        ref: this.firstNameInput,\n        type: \"text\",\n        placeholder: \"first name\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Please enter first name.\"))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"validationCustomLastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        ref: this.lastNameInput,\n        type: \"text\",\n        placeholder: \"last name\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Please enter last name.\"))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"validationCustomEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        ref: this.emailInput,\n        type: \"email\",\n        placeholder: \"email\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Please enter a valid email.\")))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleCloseRegisterModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Register\"))));\n    }\n  }]);\n\n  return RegisterModal;\n}(Component);\n\nRegisterModal.contextType = GlobalContext;\nexport default RegisterModal;","map":{"version":3,"sources":["D:\\Web\\Kliks\\cb7teamprotofront\\src\\components\\RegisterModal.js"],"names":["React","Component","Modal","Button","InputGroup","Form","Col","Row","FontAwesomeIcon","axios","Overlay","Tooltip","GlobalContext","RegisterModal","props","console","log","usernameInput","createRef","passwordInput","passwordConfirmInput","firstNameInput","lastNameInput","emailInput","handleSubmit","bind","handleCloseRegisterModal","attachRef","target","setState","state","showPasswordsDontMatch","context","setShowRegisterModal","event","current","value","post","id","headers","then","response","alert","showRegisterModal","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from \"axios\";\r\nimport { Overlay } from 'react-bootstrap';\r\nimport { Tooltip } from 'react-bootstrap';\r\nimport { GlobalContext } from './GlobalContext';\r\n\r\nclass RegisterModal extends Component {\r\n\r\n    static contextType = GlobalContext;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n\r\n        this.usernameInput = React.createRef();\r\n        this.passwordInput = React.createRef();\r\n        this.passwordConfirmInput = React.createRef();\r\n        this.firstNameInput = React.createRef();\r\n        this.lastNameInput = React.createRef();\r\n        this.emailInput = React.createRef();\r\n        this.handleSubmit = this.handleSubmit.bind(this);   \r\n        this.handleCloseRegisterModal = this.handleCloseRegisterModal.bind(this);   \r\n        \r\n        /* for pass don't match tooltip */\r\n        this.attachRef = target => this.setState({ target });\r\n        this.state = { showPasswordsDontMatch: false };\r\n    }\r\n\r\n    handleCloseRegisterModal() {\r\n      this.context.setShowRegisterModal( false );\r\n    }\r\n\r\n    handleSubmit(event){\r\n\r\n      /* for pass don't match tooltip */\r\n      if(this.passwordInput.current.value !== this.passwordConfirmInput.current.value){\r\n        this.setState({ showPasswordsDontMatch: true })\r\n      }else{\r\n        this.setState({ showPasswordsDontMatch: false });\r\n        this.handleCloseRegisterModal();\r\n        console.log('ref to username: ', this.usernameInput.current.value);\r\n        console.log('ref to password: ', this.passwordInput.current.value);\r\n        console.log('ref to password: ', this.passwordConfirmInput.current.value);\r\n        console.log('ref to firstName: ', this.firstNameInput.current.value);\r\n        console.log('ref to lastName: ', this.lastNameInput.current.value);\r\n        console.log('ref to email: ', this.emailInput.current.value);\r\n        // axios.post('testUrlHere',\r\n        axios.post('http://localhost:8080/register/user',\r\n          {\r\n            \"username\": this.usernameInput.current.value,\r\n            \"password\": this.passwordInput.current.value,\r\n            \"firstName\": this.firstNameInput.current.value,\r\n            \"lastName\": this.lastNameInput.current.value,\r\n            \"photoLink\": this.lastNameInput.current.value,\r\n            \"role\": { id: 1 },\r\n            \"email\": this.emailInput.current.value\r\n          },\r\n          {\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n            }\r\n          }\r\n        ).then( response => {\r\n          alert(\"Registered sucessfully, you can now login\");\r\n      })\r\n    }\r\n  }\r\n    render() {\r\n      const { showPasswordsDontMatch, target } = this.state;\r\n      return (\r\n        <>\r\n          <Modal show={this.context.showRegisterModal} onHide={this.handleCloseRegisterModal}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Register</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group as={Row} controlId=\"validationCustomUsername\">\r\n                  {/* <small><small>username</small></small> */}\r\n                  <InputGroup>\r\n                    {/* <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon=\"user\" /></InputGroup.Text>\r\n                    </InputGroup.Prepend> */}\r\n                    <Form.Control\r\n                      ref={this.usernameInput}\r\n                      type=\"text\"\r\n                      placeholder=\"username\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please choose a username.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"validationCustomPassword\">\r\n                  {/* <Form.Label><small>password</small></Form.Label> */}\r\n                  <InputGroup>\r\n                    {/* <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon=\"lock\" /></InputGroup.Text>\r\n                    </InputGroup.Prepend> */}\r\n                    <Form.Control\r\n                      ref={this.passwordInput}\r\n                      type=\"password\"\r\n                      placeholder=\"password\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please choose a password.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group ref={this.attachRef} as={Row} controlId=\"validationCustomPasswordConfirm\">\r\n                  {/* <Form.Label><small>confirm password</small></Form.Label> */}\r\n                  <InputGroup>\r\n                    {/* <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon=\"lock\" /></InputGroup.Text>\r\n                    </InputGroup.Prepend> */}\r\n                    <Form.Control\r\n                      ref={this.passwordConfirmInput}\r\n                      type=\"password\"\r\n                      placeholder=\"confrirm password\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please confirm your password.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n\r\n                { /* for pass don't match tooltip */ }\r\n                <Overlay id=\"passwordsDontMatchOverlay\" target={target} show={showPasswordsDontMatch} placement=\"right\">\r\n                  {props => (\r\n                    <Tooltip id=\"passwords-dont-match\" {...props}>\r\n                      Passwords don't match\r\n                    </Tooltip>\r\n                  )}\r\n                </Overlay>\r\n\r\n                <Form.Group as={Row} controlId=\"validationCustomFirstName\">\r\n                  {/* <Form.Label><small>confirm password</small></Form.Label> */}\r\n                  <InputGroup>\r\n                    {/* <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon=\"lock\" /></InputGroup.Text>\r\n                    </InputGroup.Prepend> */}\r\n                    <Form.Control\r\n                      ref={this.firstNameInput}\r\n                      type=\"text\"\r\n                      placeholder=\"first name\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please enter first name.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"validationCustomLastName\">\r\n                  {/* <Form.Label><small>confirm password</small></Form.Label> */}\r\n                  <InputGroup>\r\n                    {/* <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon=\"lock\" /></InputGroup.Text>\r\n                    </InputGroup.Prepend> */}\r\n                    <Form.Control\r\n                      ref={this.lastNameInput}\r\n                      type=\"text\"\r\n                      placeholder=\"last name\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please enter last name.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"validationCustomEmail\">\r\n                  {/* <Form.Label><small>confirm password</small></Form.Label> */}\r\n                  <InputGroup>\r\n                    {/* <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon=\"lock\" /></InputGroup.Text>\r\n                    </InputGroup.Prepend> */}\r\n                    <Form.Control\r\n                      ref={this.emailInput}\r\n                      type=\"email\"\r\n                      placeholder=\"email\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please enter a valid email.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={ this.handleCloseRegisterModal }>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={ this.handleSubmit }>\r\n                Register\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default RegisterModal;"]},"metadata":{},"sourceType":"module"}