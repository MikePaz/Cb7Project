{"ast":null,"code":"import _classCallCheck from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Web\\\\Kliks\\\\cb7teamprotofront\\\\src\\\\components\\\\LoginModal.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Modal } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { InputGroup } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from \"axios\";\nimport { GlobalContext } from './GlobalContext';\n\nvar LoginModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginModal, _Component);\n\n  function LoginModal(props) {\n    var _this;\n\n    _classCallCheck(this, LoginModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginModal).call(this, props));\n    _this.state = {\n      wrongCredentials: false\n    };\n    _this.usernameInput = React.createRef();\n    _this.passwordInput = React.createRef();\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCloseLoginModal = _this.handleCloseLoginModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginModal, [{\n    key: \"handleCloseLoginModal\",\n    value: function handleCloseLoginModal() {\n      this.context.setShowLoginModal(false);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      console.log('ref to username: ', this.usernameInput.current.value);\n      console.log('ref to password: ', this.passwordInput.current.value); // axios.get('https://jsonplaceholder.typicode.com/todos/1',\n      // axios.get('http://localhost:3000/login-register-back2front.json',\n      // axios.get('https://api.myjson.com/bins/19i7wk',\n\n      axios.post('http://localhost:8080/login/user', {\n        \"username\": this.usernameInput.current.value,\n        \"password\": this.passwordInput.current.value\n      }, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        _this2.handleCloseLoginModal();\n\n        console.log(response.data);\n\n        _this2.context.setToken(response.data.alphanumeric); // console.log( this.context.token );\n\n\n        var userFromJson = {\n          username: response.data.username,\n          firstname: response.data.firstname,\n          lastname: response.data.lastname,\n          email: response.data.email,\n          role: response.data.role\n        };\n\n        _this2.context.setUser({\n          id: response.data.user.id,\n          username: response.data.user.username,\n          firstname: response.data.user.firstName,\n          lastname: response.data.user.lastName,\n          email: response.data.user.email,\n          role: response.data.user.role\n        });\n\n        localStorage.setItem('token', response.data.alphanumeric);\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        localStorage.setItem('username', response.data.user.username);\n        localStorage.setItem('firstname', response.data.user.firstName);\n        localStorage.setItem('lastname', response.data.user.lastName);\n        localStorage.setItem('email', response.data.user.email); // let role = JSON.stringify(response.data.user.role);\n        // localStorage.setItem('role', role);\n      }).catch(function (error) {\n        _this2.setState({\n          wrongCredentials: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Modal, {\n        show: this.context.showLoginModal,\n        onHide: this.handleCloseLoginModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Login\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"validationCustomUsername\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(InputGroup.Prepend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), React.createElement(Form.Control, {\n        ref: this.usernameInput,\n        type: \"text\",\n        placeholder: \"Username\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Please enter username.\"))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"validationCustomPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(InputGroup.Prepend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(InputGroup.Text, {\n        id: \"inputGroupPrepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"lock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))), React.createElement(Form.Control, {\n        ref: this.passwordInput,\n        type: \"password\",\n        placeholder: \"Password\",\n        \"aria-describedby\": \"inputGroupPrepend\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Form.Control.Feedback, {\n        type: \"invalid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Please enter password.\"))), this.state.wrongCredentials ? React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Wrong credentials\") : null), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleCloseLoginModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Login\"))));\n    }\n  }]);\n\n  return LoginModal;\n}(Component);\n\nLoginModal.contextType = GlobalContext;\nexport default LoginModal;","map":{"version":3,"sources":["D:\\Web\\Kliks\\cb7teamprotofront\\src\\components\\LoginModal.js"],"names":["React","Component","ReactDOM","Modal","Button","InputGroup","Form","Col","Row","FontAwesomeIcon","axios","GlobalContext","LoginModal","props","state","wrongCredentials","usernameInput","createRef","passwordInput","handleSubmit","bind","handleCloseLoginModal","context","setShowLoginModal","event","console","log","current","value","post","headers","then","response","data","setToken","alphanumeric","userFromJson","username","firstname","lastname","email","role","setUser","id","user","firstName","lastName","localStorage","setItem","JSON","stringify","catch","error","setState","showLoginModal","color","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { InputGroup } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport axios from \"axios\";\r\nimport { GlobalContext } from './GlobalContext';\r\n\r\nclass LoginModal extends Component {\r\n\r\n    static contextType = GlobalContext;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          wrongCredentials: false\r\n        };\r\n        this.usernameInput = React.createRef();\r\n        this.passwordInput = React.createRef();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n        this.handleCloseLoginModal = this.handleCloseLoginModal.bind(this);\r\n    }\r\n\r\n    handleCloseLoginModal() {\r\n      this.context.setShowLoginModal( false );\r\n    }\r\n\r\n    handleSubmit(event){ \r\n      console.log('ref to username: ', this.usernameInput.current.value);\r\n      console.log('ref to password: ', this.passwordInput.current.value);\r\n      // axios.get('https://jsonplaceholder.typicode.com/todos/1',\r\n      // axios.get('http://localhost:3000/login-register-back2front.json',\r\n      // axios.get('https://api.myjson.com/bins/19i7wk',\r\n      axios.post('http://localhost:8080/login/user',\r\n        {\r\n          \"username\": this.usernameInput.current.value,\r\n          \"password\": this.passwordInput.current.value\r\n        },\r\n        {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n          }\r\n        }\r\n      ).then( response => {\r\n        this.handleCloseLoginModal();\r\n        console.log( response.data );\r\n        this.context.setToken ( response.data.alphanumeric );\r\n        // console.log( this.context.token );\r\n        let userFromJson = {\r\n          username: response.data.username,\r\n          firstname: response.data.firstname,\r\n          lastname: response.data.lastname,\r\n          email: response.data.email,\r\n          role: response.data.role\r\n        };\r\n        this.context.setUser ( {\r\n          id: response.data.user.id,\r\n          username: response.data.user.username,\r\n          firstname: response.data.user.firstName,\r\n          lastname: response.data.user.lastName,\r\n          email: response.data.user.email,\r\n          role: response.data.user.role\r\n        });\r\n        localStorage.setItem('token', response.data.alphanumeric);\r\n        localStorage.setItem('user', JSON.stringify( response.data.user));\r\n        localStorage.setItem('username', response.data.user.username);\r\n        localStorage.setItem('firstname', response.data.user.firstName);\r\n        localStorage.setItem('lastname', response.data.user.lastName);\r\n        localStorage.setItem('email', response.data.user.email);\r\n        // let role = JSON.stringify(response.data.user.role);\r\n        // localStorage.setItem('role', role);\r\n      }).catch(error => {\r\n        this.setState({ wrongCredentials: true })\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          <Modal show={this.context.showLoginModal} onHide={this.handleCloseLoginModal}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Login</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group as={Row} controlId=\"validationCustomUsername\">\r\n                  {/* <small><small>username</small></small> */}\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon=\"user\" /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      ref={this.usernameInput}\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                    >\r\n\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please enter username.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"validationCustomPassword\">\r\n                  {/* <Form.Label><small>password</small></Form.Label> */}\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon=\"lock\" /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      ref={this.passwordInput}\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      aria-describedby=\"inputGroupPrepend\"\r\n                      required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Please enter password.\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n                { ((this.state.wrongCredentials) ? <div style={{ color: \"red\" }}>Wrong credentials</div> : null) }\r\n                \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={ this.handleCloseLoginModal }>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={ this.handleSubmit }>\r\n                Login\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default LoginModal;"]},"metadata":{},"sourceType":"module"}