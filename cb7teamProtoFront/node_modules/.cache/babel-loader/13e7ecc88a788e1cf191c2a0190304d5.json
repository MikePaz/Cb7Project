{"ast":null,"code":"import _classCallCheck from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Web\\\\Kliks\\\\cb7teamProtoFront\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Web\\\\Kliks\\\\cb7teamprotofront\\\\src\\\\components\\\\MySessions.jsx\";\nimport React from 'react';\nimport { Jumbotron, Container, Button, Row } from 'react-bootstrap';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { GlobalContext } from './GlobalContext';\nimport MySessionsSession from './MySessionsSession';\n\nvar MySessions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MySessions, _React$Component);\n\n  function MySessions(props) {\n    var _this;\n\n    _classCallCheck(this, MySessions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MySessions).call(this, props));\n    _this.state = {\n      sessionsList: []\n    };\n    return _this;\n  }\n\n  _createClass(MySessions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var that = this;\n      var gearArray = this.state.selectedExtraGear;\n      $.ajax({\n        url: \"http://localhost:8080/sessions/for-user\",\n        dataType: 'json',\n        contentType: \"application/json; charset=utf-8\",\n        type: 'get',\n        headers: {\n          'X-KLICKS-AUTH': this.context.token\n        },\n        data: JSON.stringify(gearArray)\n      }).done(function (response) {\n        console.log(\"soukse\");\n        that.setState({\n          sessionsList: response\n        });\n      }).catch(function (response) {\n        console.log(response);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        id: \"here\",\n        fluid: true,\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"MySessions\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Your booked sessions appear here\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))), this.state.sessionsList.map(function (session) {\n        return React.createElement(MySessionsSession, {\n          key: session.id,\n          session: session,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return MySessions;\n}(React.Component);\n\nMySessions.contextType = GlobalContext;\nexport default MySessions;","map":{"version":3,"sources":["D:\\Web\\Kliks\\cb7teamprotofront\\src\\components\\MySessions.jsx"],"names":["React","Jumbotron","Container","Button","Row","axios","$","GlobalContext","MySessionsSession","MySessions","props","state","sessionsList","that","gearArray","selectedExtraGear","ajax","url","dataType","contentType","type","headers","context","token","data","JSON","stringify","done","response","console","log","setState","catch","map","session","id","Component","contextType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,GAAvC,QAAkD,iBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;IAEMC,U;;;;;AAIF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAFc;AAKjB;;;;wCAEkB;AACX,UAAIC,IAAI,GAAG,IAAX;AACA,UAAIC,SAAS,GAAG,KAAKH,KAAL,CAAWI,iBAA3B;AACAT,MAAAA,CAAC,CAACU,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAE,yCADA;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,WAAW,EAAE,iCAHR;AAILC,QAAAA,IAAI,EAAE,KAJD;AAKLC,QAAAA,OAAO,EAAE;AAAC,2BAAiB,KAAKC,OAAL,CAAaC;AAA/B,SALJ;AAMLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,SAAf;AAND,OAAP,EAOCa,IAPD,CAQA,UAAUC,QAAV,EAAqB;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAjB,QAAAA,IAAI,CAACkB,QAAL,CAAc;AAACnB,UAAAA,YAAY,EAAEgB;AAAf,SAAd;AACH,OAXD,EAWGI,KAXH,CAYI,UAAUJ,QAAV,EAAqB;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAdP;AAeP;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,MAAd;AAAqB,QAAA,KAAK,MAA1B;AAA2B,QAAA,SAAS,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAHJ,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATA,CADJ,CADJ,EAeK,KAAKjB,KAAL,CAAWC,YAAX,CAAwBqB,GAAxB,CAA4B,UAAAC,OAAO,EAAG;AACnC,eAAO,oBAAC,iBAAD;AAAmB,UAAA,GAAG,EAAEA,OAAO,CAACC,EAAhC;AAAoC,UAAA,OAAO,EAAED,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFA,CAfL,CADJ;AAqBH;;;;EArDoBlC,KAAK,CAACoC,S;;AAAzB3B,U,CAEK4B,W,GAAc9B,a;AAuDzB,eAAeE,UAAf","sourcesContent":["import React from 'react';\r\nimport { Jumbotron, Container, Button, Row } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\nimport { GlobalContext } from './GlobalContext';\r\nimport MySessionsSession from './MySessionsSession';\r\n\r\nclass MySessions extends React.Component {\r\n\r\n    static contextType = GlobalContext;\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            sessionsList: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n            let that = this;\r\n            let gearArray = this.state.selectedExtraGear;\r\n            $.ajax({\r\n              url: \"http://localhost:8080/sessions/for-user\",\r\n              dataType: 'json',\r\n              contentType: \"application/json; charset=utf-8\",                       \r\n              type: 'get',         \r\n              headers: {'X-KLICKS-AUTH': this.context.token },\r\n              data: JSON.stringify(gearArray)\r\n          }).done(\r\n            function( response ) {\r\n                console.log(\"soukse\");\r\n                that.setState({sessionsList: response});\r\n            }).catch(\r\n                function( response ) {\r\n                    console.log(response);\r\n                  })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Jumbotron id=\"here\" fluid className=\"mb-0\">\r\n                    <Container>\r\n                    {/* <DisplayPic></DisplayPic> */}\r\n                        <h1>MySessions</h1>\r\n                        <p>\r\n                            Your booked sessions appear here\r\n                    </p>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n                    </Container>\r\n\r\n                </Jumbotron>\r\n                {this.state.sessionsList.map(session =>{\r\n                    return <MySessionsSession key={session.id} session={session}></MySessionsSession>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MySessions;"]},"metadata":{},"sourceType":"module"}